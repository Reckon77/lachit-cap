

// defines pins numbers
const int trigPin = 13;
const int echoPin = 12;

const int buzzerPin = 7;
const int ledPin = 8;

// defines variables
long duration;
int distance;

void setup() {
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  
  pinMode(buzzerPin, OUTPUT); // Set buzzer - pin 9 as an output
  
  pinMode(ledPin, OUTPUT);
  
  Serial.begin(9600); // Starts the serial communication
}

void loop() {
  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);

  // Calculating the distance in centimeters
  distance = duration*0.034/2;

  // Prints the distance on the Serial Monitor
  Serial.print("Distance in centimeters: ");
  Serial.println(distance);
  
  if (distance < 20){
  int brightness = map(distance, 4, 3, 0, 255); //range parameters
  brightness = 255 - brightness;
  analogWrite(ledPin, brightness);
  int toneVol = map(distance, 4, 50, 0, 1000);
  toneVol = 1000 - toneVol;
  tone(buzzerPin, toneVol);  
  } else {
    noTone(buzzerPin);     // Stop sound...
    
    digitalWrite(ledPin, LOW);
  }

if(distance <= 4){
  playMelody();
}

 
}

void playMelody(){

  tone(buzzerPin, 1000);  //piezo sound time
  delay(800);

  noTone(buzzerPin);  
  delay(300);
  
    tone(buzzerPin, 1000);                  
  delay(800);

  noTone(buzzerPin);  
  delay(300);
    tone(buzzerPin, 1000);  
  delay(800);

  noTone(buzzerPin);  
  delay(300);
  
}



